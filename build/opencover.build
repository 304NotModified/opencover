<project name="OpenCover" default="rebuild">

    <property name="configuration" value="debug" unless="${property::exists('configuration')}" />
    <property name="platform" value="x86" unless="${property::exists('platform')}" />
	<property name="solution.path" value="../main"/>
	<property name="nunit.path" value="../tools/nunit/NUnit-2.5.7.10213/bin/net-2.0"/>
	<property name="windows-path" value="${string::to-lower(environment::get-variable('PATH'))}"/>
	<property name="nunit-in-path" value="${string::contains(windows-path, 'nunit')}"/>
	<property name="open-cover-test-console" value="${solution.path}/${platform}/${configuration}/OpenCover.Test.Profiler.exe"/>
	
	<target name="rebuild" depends="clean, build, test, test-cpp, unregister" />

    <target name="clean" description="Delete all previously compiled binaries.">
        <delete>
            <fileset>
                <include name="${solution.path}/**/bin/**" />
                <include name="${solution.path}/**/obj/**" />
                <include name="${solution.path}/**/*.suo" />
                <include name="${solution.path}/**/*.user" />
				<include name="${solution.path}/**/x86/**" />
				<include name="${solution.path}/**/x64/**" />
				<include name="${solution.path}/**/Win32/**" />
				<include name="${solution.path}/Docs/**" />
            </fileset>
        </delete>
    </target>
    
    <target name="build" description="Build all targets.">
        <call target="build.opencover"/>
    </target>

	<target name="build-all-platforms" description="Build all flavours i.e. all configurations and all platforms">
		<property name="configuration" value="debug" />
		<property name="platform" value="x86" />
		<call target="build.opencover" />
		<property name="platform" value="x64" />
		<call target="build.opencover" />
		<property name="configuration" value="release" />
		<property name="platform" value="x86" />
		<call target="build.opencover" />
		<property name="platform" value="x64" />
		<call target="build.opencover" />
		<call target="unregister" />
	</target>
    
    <target name="build.opencover">
        <loadtasks assembly="nantcontrib-0.85/bin/NAnt.Contrib.Tasks.dll" />
		<msbuild project="${solution.path}/opencover.sln">
			<arg value="/p:Configuration=${configuration}" />
			<arg value="/p:Platform=${platform}" />
			<arg value="/t:Rebuild" />
		</msbuild>
	  
        <property name="expected.output" value="${solution.path}/${platform}/${configuration}/OpenCover.Console.exe"/>
        <fail unless="${file::exists(expected.output)}">Output file doesn't exist in ${expected.output}</fail>
    </target>
	
	<target name="test" description="Run unit tests" depends="build" >
		
		<property name="nunit-console" value="${nunit.path}/nunit-console.exe" if="${platform=='x64'}" />
		<property name="nunit-console" value="${nunit.path}/nunit-console-x86.exe" if="${platform=='x86'}" />
		
		<exec program="${nunit-console}">
			<arg value="${solution.path}/${platform}/${configuration}/OpenCover.Test.dll" />
			<arg value="/framework=4.0" />
			<arg value="/xml=${solution.path}/${platform}/${configuration}/TestResult.xml" />
		</exec>
		
		
		
	</target>
	
	<target name="test-cpp" description="Run C++ tests" >
		<exec program="${open-cover-test-console}" if="${file::exists(open-cover-test-console)}" />
	</target>
    
	<target name="unregister" description="Unregister the profiler assembly" >
		<exec program="regsvr32 /u ${solution.path}/${platform}/${configuration}/OpenCover.Profiler.dll" />
	</target>
	
</project>