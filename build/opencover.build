<?xml version="1.0"?>
<project name="OpenCover" >

    <property name="configuration" value="debug" unless="${property::exists('configuration')}" />
    <property name="platform" value="x86" unless="${property::exists('platform')}" />
    <property name="nunit.path" value="${tools.folder}/NUnit-2.5.9.10348/bin/net-2.0"/>
    <property name="windows-path" value="${string::to-lower(environment::get-variable('PATH'))}"/>
    <property name="nunit-in-path" value="${string::contains(windows-path, 'nunit')}"/>
    <property name="open-cover-test-console" value="${solution.folder}/${platform}/${configuration}/OpenCover.Test.Profiler.exe"/>
    
	<property name="msbuild.exe" value="${netfx4.folder}/MSBuild.exe" />
	
	<property name="teamcity.dotnet.nunitaddin" value="" unless="${property::exists('teamcity.dotnet.nunitaddin')}" />
	
    <target name="clean" description="Delete all previously compiled binaries.">
        <delete>
            <fileset>
                <include name="${solution.folder}/**/bin/**" />
                <include name="${solution.folder}/**/obj/**" />
                <include name="${solution.folder}/**/*.suo" />
                <include name="${solution.folder}/**/*.user" />
                <include name="${solution.folder}/**/x86/**" />
                <include name="${solution.folder}/**/x64/**" />
                <include name="${solution.folder}/**/Win32/**" />
                <include name="${solution.folder}/Docs/**" />
                <include name="${solution.folder}/**/Debug/**" />
                <include name="${solution.folder}/**/Release/**" />
            </fileset>
        </delete>
    </target>
    
    <target name="clean-all" description="Delete all other files" depends="clean">
        <delete>
            <fileset>
                <include name="${solution.folder}/ipch/**" />
                <include name="${solution.folder}/opencover.sdf" />
            </fileset>
        </delete>
    </target>
    
    <target name="build" description="Build all targets.">
        <call target="build.opencover"/>
    </target>

    <target name="build-all-platforms" description="Build all flavours i.e. all configurations and all platforms">
        <property name="configuration" value="debug" />
        <property name="platform" value="x86" />
        <call target="build.opencover" />
        <property name="configuration" value="release" />
        <property name="platform" value="x86" />
        <call target="build.opencover" />
        <property name="configuration" value="debug" />
        <property name="platform" value="x64" />
        <call target="build.opencover" />
        <property name="configuration" value="release" />
        <property name="platform" value="x64" />
        <call target="build.opencover" />
    </target>
    
    <target name="build.opencover">
		
		<exec program="${msbuild.exe}">
		    <arg value="${solution.folder}/opencover.sln" />
		    <arg value="/t:Clean,Rebuild" />
		    <arg value="/p:Configuration=${configuration},Platform=${platform}" />
		</exec>
      
        <property name="expected.output" value="${solution.folder}/${platform}/${configuration}/OpenCover.Console.exe"/>
        <fail unless="${file::exists(expected.output)}">Output file doesn't exist in ${expected.output}</fail>
    </target>
    
	<target name="copy-teamcity-nunit-plugin" >
	    <!-- from http://legeronline.blogspot.com/2009/05/team-city-addin-for-nunit.html -->
	    <mkdir dir="${nunit.path}\addins" />
		<copy file="${teamcity.dotnet.nunitaddin}-2.5.9.dll" todir="${nunit.path}\addins" />
	</target>
	
    <target name="test" description="Run unit tests" depends="build" >
        
		<call target="copy-teamcity-nunit-plugin" unless="${teamcity.dotnet.nunitaddin==''}" />
		
        <property name="nunit-console" value="${nunit.path}/nunit-console.exe" if="${platform=='x64'}" />
        <property name="nunit-console" value="${nunit.path}/nunit-console-x86.exe" if="${platform=='x86'}" />
        
        <exec program="${nunit-console}">
            <arg value="${solution.folder}/${platform}/${configuration}/OpenCover.Test.dll" />
            <arg value="/framework=4.0" />
            <arg value="/xml=${solution.folder}/${platform}/${configuration}/TestResult.xml" />
        </exec>
        
    </target>
    
    <target name="test-cpp" depends="register, test-cpp-internal, unregister" />
    
    <target name="test-cpp-internal" description="Run C++ tests" >
        <exec program="${open-cover-test-console}" if="${file::exists(open-cover-test-console)}" />
    </target>
    
    <target name="unregister" description="Unregister the profiler assembly" >
        <exec program="regsvr32" >	
            <arg value="/u" />
			<arg value="/n" />
            <arg value="/i:user" />
            <arg value="/s" />
            <arg value="${solution.folder}/${platform}/${configuration}/OpenCover.Profiler.dll" />	
        </exec>
    </target>

    <target name="register" description="Register the profiler assembly (per-user)" >
        <exec program="regsvr32" >	
            <arg value="/n" />
            <arg value="/i:user" />
            <arg value="/s" />
            <arg value="${solution.folder}/${platform}/${configuration}/OpenCover.Profiler.dll" />	
        </exec>
    </target>
    
</project>